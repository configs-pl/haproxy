global
        log 127.0.0.1	local0
        log 127.0.0.1	local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        maxconn 32000
        ulimit-n 65536
	tune.maxrewrite 4096
        user haproxy
        group haproxy
        daemon
        quiet
        nbproc  2

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/pointlook

	# configure the maximum size of temporary DHE keys that are generated
	tune.ssl.default-dh-param 2048

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	maxconn 16384

	## default options
	option httplog
	no option  http-server-close
	option  dontlognull
	option  redispatch
	option  contstats
	option forwardfor
	option http-pretend-keepalive

	## timeouts
	backlog 10000
	retries 3
	timeout client          25s
	timeout connect          5s
	timeout server          25s
	# timeout tunnel available in ALOHA 5.5 or HAProxy 1.5-dev10 and higher
	timeout tunnel        3600s
	timeout http-keep-alive  1s
	timeout http-request    15s
	timeout queue           30s
	timeout tarpit          60s
	default-server inter 3s rise 2 fall 3


	## stats
	stats enable
	stats uri /stats
	stats realm Haproxy\ Statistics
        stats auth admin:CHANGEME

	## error files
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend couchdb-in
	bind 10.100.100.3:5984
	mode tcp
	option tcpka
	default_backend couchdb_cluster

frontend mysql-in
	bind 10.100.100.3:3306
	mode tcp
	option tcpka
	default_backend mysql_cluster

frontend http-in
	bind 10.100.100.3:80
	timeout client 5s
	mode http
	option forwardfor
	reqadd X-Forwarded-Proto:\ http
	redirect scheme https if !{ ssl_fc }

frontend www-https
	bind 10.100.100.3:443 ssl crt /etc/ssl/pointlook/proxy01.pointlook.com.pem
	timeout client 1h
	tcp-request inspect-delay 500ms
	tcp-request content accept if HTTP

	## figure out which one to use for socket access
	acl host_ws hdr_beg(Host) -i ws.
	acl hdr_connection_upgrade hdr(Connection)  -i upgrade
	acl hdr_upgrade_websocket  hdr(Upgrade)     -i websocket

	## use treetoweb route
        use_backend treetoweb_cluster if { hdr_dom(Host) -i treetoweb.com }
	use_backend treetoweb_cluster if hdr_connection_upgrade hdr_upgrade_websocket host_ws { hdr_dom(Host) -i treetoweb.com }
        use_backend treetoweb_cluster if { hdr_dom(Host) -i tree2web.com }
	use_backend treetoweb_cluster if hdr_connection_upgrade hdr_upgrade_websocket host_ws { hdr_dom(Host) -i tree2web.com }

	## use weebly route
        use_backend weebly_cluster if { hdr(Host) -i weebly.pointlook.com }
        use_backend weebly_cluster if hdr_connection_upgrade hdr_upgrade_websocket host_ws { hdr(Host) -i weebly.pointlook.com }
	
	## use wip route
        use_backend wip_cluster if { hdr(Host) -i wip.pointlook.com }
        use_backend wip_cluster if hdr_connection_upgrade hdr_upgrade_websocket host_ws { hdr(Host) -i wip.pointlook.com }

	## use dev route
        use_backend dev_cluster if { hdr(Host) -i dev.pointlook.com }
        use_backend dev_cluster if hdr_connection_upgrade hdr_upgrade_websocket host_ws { hdr(Host) -i dev.pointlook.com }
	
	## use wip route
        use_backend wip_cluster if { hdr(Host) -i wip.pointlook.com }
        use_backend wip_cluster if hdr_connection_upgrade hdr_upgrade_websocket host_ws { hdr(Host) -i wip.pointlook.com }

	## use owncloud route
        use_backend owncloud_cluster if { hdr(Host) -i owncloud.pointlook.com }
        use_backend owncloud_cluster if hdr_connection_upgrade hdr_upgrade_websocket host_ws { hdr(Host) -i owncloud.pointlook.com }

	## use bastion route
        use_backend bastion_cluster if { hdr(Host) -i bastion.pointlook.com }
        use_backend bastion_cluster if hdr_connection_upgrade hdr_upgrade_websocket host_ws { hdr(Host) -i bastion.pointlook.com }

	## use weedmd route
        use_backend weedmd_cluster if { hdr_dom(Host) -i weedmd.us }
        use_backend weedmd_cluster if hdr_connection_upgrade hdr_upgrade_websocket host_ws { hdr_dom(Host) -i weedmd.us }

	## use thingtosell route
        use_backend thingtosell_cluster if { hdr_dom(Host) -i thingtosell.com }
        use_backend thingtosell_cluster if hdr_connection_upgrade hdr_upgrade_websocket host_ws { hdr_dom(Host) -i thingtosell.com }

	## use usertoken route
        use_backend usertoken_cluster if { hdr_dom(Host) -i usertoken.com }
        use_backend usertoken_cluster if hdr_connection_upgrade hdr_upgrade_websocket host_ws { hdr_dom(Host) -i usertoken.com }

	## use pointlook route
        use_backend pointlook_cluster if { hdr_dom(Host) -i pointlook.com }
        use_backend pointlook_cluster if { hdr_dom(Host) -i pointlook.com } hdr_connection_upgrade hdr_upgrade_websocket host_ws

	## use printerlife route
        use_backend printerlife_cluster if { hdr_dom(Host) -i printer.life }
        use_backend printerlife_cluster if { hdr_dom(Host) -i printer.life } hdr_connection_upgrade hdr_upgrade_websocket host_ws


	## use default if nothing matches
        default_backend pointlook_cluster

backend owncloud_cluster
	mode http
	cookie JSESSIONID insert nocache
	option forwardfor
	option http-server-close
	option forceclose
	no option httpclose
	balance source
	server owncloud01 10.101.101.21:80 check cookie owncloud01

backend treetoweb_cluster
	mode http
	cookie JSESSIONID insert nocache
	option forwardfor
	no option http-server-close
	no option forceclose
	no option httpclose
	balance source
	hash-type consistent
	server web01-tree 10.101.101.81:80 check cookie web01-tree
	server web02-tree 10.101.101.82:80 check cookie web02-tree

backend pointlook_cluster
	mode http
	cookie JSESSIONID insert nocache
	option forwardfor
	option http-server-close
	option forceclose
	no option httpclose
	balance source
	server web01-pl 10.101.101.11:80 check cookie web01-pl
	server web02-pl 10.101.101.12:80 check cookie web02-pl

backend thingtosell_cluster
	mode http
	cookie JSESSIONID insert nocache
	option forwardfor
	option http-server-close
	option forceclose
	no option httpclose
	balance source
	server web01-tts 10.101.101.31:80 check cookie web01-tts
	server web02-tts 10.101.101.32:80 check cookie web02-tts

backend usertoken_cluster
	mode http
	cookie JSESSIONID insert nocache
	option forwardfor
	option http-server-close
	option forceclose
	no option httpclose
	balance source
	server web01-ut 10.101.101.41:80 check cookie web01-ut
	server web02-ut 10.101.101.42:80 check cookie web02-ut
	
backend weedmd_cluster
	mode http
	cookie JSESSIONID insert nocache
	option forwardfor
	option http-server-close
	option forceclose
	no option httpclose
	balance source
	server web01-md 10.101.101.61:80 check cookie web01-md
	server web02-md 10.101.101.62:80 check cookie web02-md
	
backend printerlife_cluster
	mode http
	cookie JSESSIONID insert nocache
	option forwardfor
	option http-server-close
	option forceclose
	no option httpclose
	balance source
	server web01-life 10.101.101.71:80 check cookie web01-life
	server web02-life 10.101.101.72:80 check cookie web02-life
	
backend weebly_cluster
	mode http
	cookie JSESSIONID insert nocache
	option forwardfor
	option http-server-close
	option forceclose
	no option httpclose
	balance source
	server web01-weebly 10.101.101.11:80 check cookie web01-weebly
	server web02-weebly 10.101.101.12:80 check cookie web02-weebly

backend couchdb_cluster
	mode tcp
	option tcpka
        no option http-server-close
        no option  dontlognull
	tcp-request inspect-delay 2s
	option httpchk GET /
	http-check disable-on-404
    	server couchdb01 10.101.101.3:5984 check inter 5s

backend mysql_cluster
	mode tcp
	option tcpka
        no option http-server-close
        no option  dontlognull
    	option mysql-check user monitor
	tcp-request inspect-delay 2s
    	server mysql01 10.101.101.3:3306 check inter 5s

backend bastion_cluster
	mode http
	cookie JSESSIONID insert nocache
	option forwardfor
	option http-server-close
	option forceclose
	no option httpclose
	balance source
	server bastion01 10.100.100.10:7000 check cookie bastion01

backend dev_cluster
	mode http
	cookie JSESSIONID insert nocache
	option forwardfor
	option http-server-close
	option forceclose
	no option httpclose
	balance source
	server dev01 10.100.100.10:8000 check cookie dev01

backend wip_cluster
	mode http
	cookie JSESSIONID insert nocache
	option forwardfor
	option http-server-close
	option forceclose
	no option httpclose
	balance source
	server dev01 10.100.100.10:3000 check cookie dev01
